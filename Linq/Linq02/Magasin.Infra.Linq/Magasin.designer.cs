#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Magasin.Infra.Linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Magasin")]
	public partial class MagasinDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertCategorie(Categorie instance);
    partial void UpdateCategorie(Categorie instance);
    partial void DeleteCategorie(Categorie instance);
    partial void InsertProduit(Produit instance);
    partial void UpdateProduit(Produit instance);
    partial void DeleteProduit(Produit instance);
    #endregion
		
		public MagasinDataContext() : 
				base(global::Magasin.Infra.Linq.Properties.Settings.Default.MagasinConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MagasinDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MagasinDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MagasinDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MagasinDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Categorie> Categorie
		{
			get
			{
				return this.GetTable<Categorie>();
			}
		}
		
		public System.Data.Linq.Table<Produit> Produit
		{
			get
			{
				return this.GetTable<Produit>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categorie")]
	public partial class Categorie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private EntitySet<Produit> _Produit;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Categorie()
		{
			this._Produit = new EntitySet<Produit>(new Action<Produit>(this.attach_Produit), new Action<Produit>(this.detach_Produit));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categorie_Produit", Storage="_Produit", ThisKey="Id", OtherKey="IdCategorie")]
		public EntitySet<Produit> Produit
		{
			get
			{
				return this._Produit;
			}
			set
			{
				this._Produit.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Produit(Produit entity)
		{
			this.SendPropertyChanging();
			entity.Categorie = this;
		}
		
		private void detach_Produit(Produit entity)
		{
			this.SendPropertyChanging();
			entity.Categorie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produit")]
	public partial class Produit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdCategorie;
		
		private string _Description;
		
		private System.Nullable<decimal> _Valeur;
		
		private EntityRef<Categorie> _Categorie;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdCategorieChanging(int value);
    partial void OnIdCategorieChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnValeurChanging(System.Nullable<decimal> value);
    partial void OnValeurChanged();
    #endregion
		
		public Produit()
		{
			this._Categorie = default(EntityRef<Categorie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategorie", DbType="Int NOT NULL")]
		public int IdCategorie
		{
			get
			{
				return this._IdCategorie;
			}
			set
			{
				if ((this._IdCategorie != value))
				{
					if (this._Categorie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCategorieChanging(value);
					this.SendPropertyChanging();
					this._IdCategorie = value;
					this.SendPropertyChanged("IdCategorie");
					this.OnIdCategorieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valeur", DbType="Money")]
		public System.Nullable<decimal> Valeur
		{
			get
			{
				return this._Valeur;
			}
			set
			{
				if ((this._Valeur != value))
				{
					this.OnValeurChanging(value);
					this.SendPropertyChanging();
					this._Valeur = value;
					this.SendPropertyChanged("Valeur");
					this.OnValeurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categorie_Produit", Storage="_Categorie", ThisKey="IdCategorie", OtherKey="Id", IsForeignKey=true)]
		public Categorie Categorie
		{
			get
			{
				return this._Categorie.Entity;
			}
			set
			{
				Categorie previousValue = this._Categorie.Entity;
				if (((previousValue != value) 
							|| (this._Categorie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categorie.Entity = null;
						previousValue.Produit.Remove(this);
					}
					this._Categorie.Entity = value;
					if ((value != null))
					{
						value.Produit.Add(this);
						this._IdCategorie = value.Id;
					}
					else
					{
						this._IdCategorie = default(int);
					}
					this.SendPropertyChanged("Categorie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
